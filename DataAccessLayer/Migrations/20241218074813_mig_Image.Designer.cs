// <auto-generated />
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241218074813_mig_Image")]
    partial class mig_Image
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Concrete.BolgeMahalle", b =>
                {
                    b.Property<int>("BolgeMahalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolgeMahalleID"));

                    b.Property<string>("BolgeMahalleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BolgeMahalleID");

                    b.ToTable("BolgeMahalles");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Emlak", b =>
                {
                    b.Property<int>("EmlakID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmlakID"));

                    b.Property<int>("BolgeMahalleID")
                        .HasColumnType("int");

                    b.Property<string>("Cephe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmlakAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmlakAsansor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmlakEsya")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmlakIsitma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmlakKat")
                        .HasColumnType("int");

                    b.Property<int>("EmlakMetreKare")
                        .HasColumnType("int");

                    b.Property<string>("EmlakName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmlakOda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmlakOtopark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmlakTipID")
                        .HasColumnType("int");

                    b.Property<int>("EmlakTurID")
                        .HasColumnType("int");

                    b.Property<string>("EmlakYayinda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fiyat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KonutYas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kredi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TapuDurum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YoneticiID")
                        .HasColumnType("int");

                    b.HasKey("EmlakID");

                    b.HasIndex("BolgeMahalleID");

                    b.HasIndex("EmlakTipID");

                    b.HasIndex("EmlakTurID");

                    b.HasIndex("YoneticiID");

                    b.ToTable("Emlaks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EmlakTip", b =>
                {
                    b.Property<int>("EmlakTipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmlakTipID"));

                    b.Property<string>("EmlakTipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmlakTipID");

                    b.ToTable("EmlakTips");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EmlakTur", b =>
                {
                    b.Property<int>("EmlakTurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmlakTurID"));

                    b.Property<string>("EmlakTurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmlakTurID");

                    b.ToTable("EmlakTurs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int>("EmlakID")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageID");

                    b.HasIndex("EmlakID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yonetici", b =>
                {
                    b.Property<int>("YoneticiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YoneticiID"));

                    b.Property<string>("YoneticiAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoneticiMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoneticiSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YoneticiTel")
                        .HasColumnType("int");

                    b.Property<string>("YoneticiUnvan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YoneticiID");

                    b.ToTable("Yoneticis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Emlak", b =>
                {
                    b.HasOne("EntityLayer.Concrete.BolgeMahalle", "BolgeMahalles")
                        .WithMany("Emlaks")
                        .HasForeignKey("BolgeMahalleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.EmlakTip", "EmlakTips")
                        .WithMany("Emlaks")
                        .HasForeignKey("EmlakTipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.EmlakTur", "EmlakTurs")
                        .WithMany("Emlaks")
                        .HasForeignKey("EmlakTurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Yonetici", "Yoneticis")
                        .WithMany("Emlaks")
                        .HasForeignKey("YoneticiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BolgeMahalles");

                    b.Navigation("EmlakTips");

                    b.Navigation("EmlakTurs");

                    b.Navigation("Yoneticis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Image", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Emlak", "Emlak")
                        .WithMany("Images")
                        .HasForeignKey("EmlakID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emlak");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BolgeMahalle", b =>
                {
                    b.Navigation("Emlaks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Emlak", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EmlakTip", b =>
                {
                    b.Navigation("Emlaks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EmlakTur", b =>
                {
                    b.Navigation("Emlaks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yonetici", b =>
                {
                    b.Navigation("Emlaks");
                });
#pragma warning restore 612, 618
        }
    }
}
